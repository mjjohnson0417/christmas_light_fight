@font-face {
  font-family: 'Twinkle Lights Demo';
  src: url('/fonts/Twinkle\ Lights\ Demo.ttf') 
  }
@font-face {
  font-family:'MerryChristmasFlake' ;
  src: url('/fonts/MerryChristmasFlake.ttf');
}
html {
  height: 100%;
  width: 100%
}
body {
  background-image: url("/images/opaque_santa_village.png.jpeg");
  background-size: 100% 100%;
  background-repeat: no-repeat;
}
h1, h2, ul {
  color: red;
  background-color: green;
  text-align: center;
  font-family: MerryChristmasFlake;
} 
/* applies to all elements in the group
h1, h2 {
  color: red;
  background-color: green;
  text-align: center;
  font-family: MerryChristmasFlake;
} 
*/
/*- this is a parent child selection using >, will change h2 to blue if parent element has .box class
.box > h2 { 
  color: green;
  background-color: red;
  text-align: center;
  font-family: MerryChristmasFlake;
}
 */
/*- this is a descendant selection, will change h2 to blue is parent is h1*/
ul > li { 
  color: green;
  background-color: red;
  text-align: center;
  font-family: MerryChristmasFlake;
}
/*
h1#test.test2 { chain precedence, very specific, this would ONLY catch a h1 with an id of test and a class of test2. Used when you have coded yourself into a corner?
color: green 
}
*/
p[draggable="false"]{ /* only applies to paragraph with draggable set to false*/
  color: red;
  font-size: 20px;
  /*font size in em is a multiple of immediate parent tag, ie 2em is 2x the size of parent tag
  rem is like em but takes its multipler from the room tag, ie html tag. rem is a more consistent way to match font across a website*/
}
p[draggable="true"]{ /* only applies to paragraph with draggable set to true*/
  color: blue;
  font-size: 20px;
}
#test { /*# means id of an element, have to specify the id in the tag*/
  color: green;
  font-size: 15pt;
  font-family: system-ui;
  font-weight: 700;
  font-style: oblique;
}
#first {
  /*order element-->padding-->border-->margin*/
  background-color: cadetblue;
  padding: 20px; /*padding is space between element and border*/
  margin: 10px; /*margin is spacking between elements*/
  border: 10px solid black; /*space between padding and margin*/
  /*border width: 10px 10px 10px 10px first two numbers are top/bottom, last two are left/right. These numbers can all be different*/
  position: relative;
  /*position: static*/
  /*position: relative*/
   /*position: absolute*/
    /*position: */
}
.test2 { /*# means class of an element, have to specify the class in the tag*/
  color: orange;
  font-size: 20px;
}
/*
css inheritance:
1. position - last thing applied takes precedence
2. specificity of selector - from least to most specific. 
element-->class-->attribute(draggable is an example)-->id
3. type of stylesheet - from least to most specific
external-->internal-->inline
4. importance - if you see !important; this gives a selector priority

*/


